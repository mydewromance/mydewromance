<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Gitbook教程]]></title>
    <url>%2F2018%2F10%2F21%2Fgitbook-init%2F</url>
    <content type="text"><![CDATA[准备 Node.js 安装Gitbook1$ npm install gitbook-cli -g 查看是否完成安装123$ gitbook -VCLI version: 2.3.2GitBook version: 3.2.3 使用Gitbook在书籍目录使用命令1$ gitbook init 之后创建README.md 和 SUMMARY.md 这两个文件其中SUMMARY.md是书籍主体框架 SUMMARY简单用法12345678# Summary * [Part I](part1/README.md) * [Writing is nice](part1/writing.md) * [GitBook is nice](part1/gitbook.md)* [Part II](part2/README.md) * [We love feedback](part2/feedback_please.md) * [Better tools for authors](part2/better_tools.md) 编辑SUMMARY.md文件类似上面部分，然后命令行运行下面命令，生成目录结构1$ gitbook init 使用锚点指向同一文件特定部分12345678910# Summary ### Part I * [Part I](part1/README.md) * [Writing is nice](part1/README.md#writing) * [GitBook is nice](part1/README.md#gitbook)* [Part II](part2/README.md) * [We love feedback](part2/README.md#feedback) * [Better tools for authors](part2/README.md#tools) 使用----指定标题显示方式123456789101112131415# Summary ### Part I * [Writing is nice](part1/writing.md)* [GitBook is nice](part1/gitbook.md) ### Part II * [We love feedback](part2/feedback_please.md)* [Better tools for authors](part2/better_tools.md) ---- * [Last part without title](part3/title.md) Glossary允许您指定要显示为注释的术语及其各自的定义。根据这些术语，GitBook 将自动构建索引并突出显示这些术语。 GLOSSARY.md 的格式是 h2 标题的列表，以及描述段落：123456## TermDefinition for this term ## Another termWith it&apos;s definition, this can contain bold textand all other kinds of inline markup ... 在网页查看gitbook构建gitbook1$ gitbook build 运行服务1$ GitBook serve 网页登录http://localhost:4000/查看 通过book.json配置gitbook 变量 描述 root 包含所有图书文件的根文件夹的路径，除了 book.json structure 指定自述文件，摘要，词汇表等的路径，参考 Structure paragraph. title 您的书名，默认值是从 README 中提取出来的。在 GitBook.com 上，这个字段是预填的。 description 您的书籍的描述，默认值是从 README 中提取出来的。在 GitBook.com 上，这个字段是预填的。 author 作者名。在GitBook.com上，这个字段是预填的。 isbn 国际标准书号 ISBN language 本书的语言类型 —— ISO code 。默认值是 en direction 文本阅读顺序。可以是 rtl （从右向左）或 ltr （从左向右），默认值依赖于 language 的值。 gitbook 应该使用的GitBook版本。使用 SemVer 规范，并接受类似于 “&gt; = 3.0.0” 的条件。 book.json例子123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&#123; "title": "Blankj's Glory", "author": "Blankj", "description": "select * from learn", "language": "zh-hans", "gitbook": "3.2.3", "styles": &#123; "website": "./styles/website.css" &#125;, "structure": &#123; "readme": "README.md" &#125;, "links": &#123; "sidebar": &#123; "我的狗窝": "https://blankj.com" &#125; &#125;, "plugins": [ "-sharing", "splitter", "expandable-chapters-small", "anchors", "github", "github-buttons", "donate", "sharing-plus", "anchor-navigation-ex", "favicon" ], "pluginsConfig": &#123; "github": &#123; "url": "https://github.com/Blankj" &#125;, "github-buttons": &#123; "buttons": [&#123; "user": "Blankj", "repo": "glory", "type": "star", "size": "small", "count": true &#125; ] &#125;, "donate": &#123; "alipay": "./source/images/donate.png", "title": "", "button": "赞赏", "alipayText": " " &#125;, "sharing": &#123; "douban": false, "facebook": false, "google": false, "hatenaBookmark": false, "instapaper": false, "line": false, "linkedin": false, "messenger": false, "pocket": false, "qq": false, "qzone": false, "stumbleupon": false, "twitter": false, "viber": false, "vk": false, "weibo": false, "whatsapp": false, "all": [ "google", "facebook", "weibo", "twitter", "qq", "qzone", "linkedin", "pocket" ] &#125;, "anchor-navigation-ex": &#123; "showLevel": false &#125;, "favicon":&#123; "shortcut": "./source/images/favicon.jpg", "bookmark": "./source/images/favicon.jpg", "appleTouch": "./source/images/apple-touch-icon.jpg", "appleTouchMore": &#123; "120x120": "./source/images/apple-touch-icon.jpg", "180x180": "./source/images/apple-touch-icon.jpg" &#125; &#125; &#125;&#125; 生成电子书12345678# Generate a PDF file$ gitbook pdf ./ ./mybook.pdf # Generate an ePub file$ gitbook epub ./ ./mybook.epub # Generate a Mobi file$ gitbook mobi ./ ./mybook.mobi 参考与资源博客1博客2博客3教程官方教程Gitbook GithubGitbook Toolchain 文档Gitbook 帮助中心]]></content>
      <tags>
        <tag>gitbook</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[As the Dew]]></title>
    <url>%2F2018%2F10%2F14%2Fas-the-dew%2F</url>
    <content type="text"><![CDATA[花儿伴随着钢琴的旋律飞舞两人面对面却充满神秘 喜欢柯南开场的OP例行台词，配上柯南的声音，这绝对是童年最酷的事情了。还记得初中拿着零花钱去两元店购物的场景，看着玲琅满目的杂七杂八颇有一种布恩迪亚第一次看吉普赛人发明的新鲜感，那时买到的“宝贝”应该很多，然而印象最深的大概是买到的两本柯南小说，对的是小说，不是漫画，里面的案件竟然是当作小说写出来的，然而并没有扫兴的感觉，毕竟2元钱一大本书，说什么也是赚了，更何况里面还有一张光盘。还记得我临摹过书里面的两张插图呢（那大概是我绘画的巅峰吧，哈哈~）。 如果用马尔克斯的语言写的话，大概是：多年以后，面对着麻木的生活，我会回想起我和好友王某某看光盘的那个遥远的下午。 如今光盘里的剧情早已记得不是很清楚了，开头的OP却决定了我未来多年的网名。当时并没有细看歌词，只觉得新一靠在路灯上，伴随着淡淡的悲伤，颇有一种归去，也无风雨也无晴的情感在里面，如今多年后回看歌词，却愈发觉得歌词悲伤。 生憎の雨だけど予定通り出かけましょう令人生厌地下着雨 但还是像往常一样出门吧せっかくの Dress up も あなたには見えてないし我精心打扮一番 你却视而不见週末の桜通りなら華やいだ白い道周末的樱花小道 真是美丽热闹足音響く美術館で懐かしんだSerusier走进美术馆 怀念塞吕西耶的画二度と会わない関係ならば 傷つけ合わずに若我们的关系只是若即若离就不会伤害彼此甘い想い出の日々と 思うことも出来るけど虽然还可以将过去的日子当做甜蜜的回忆時の流れには逆らえず 色褪せてゆく想いもあり难以阻挡的时光会冲淡回忆それでもさめざめと流れてく此时我不禁潸然泪下涙はちょっといいもんじゃない即使偶尔哭一次也没有关系吧あぁ…あぁ ひゅるる陽は墜ちて啊~啊~风声窸窣红日坠落まだ愛があるみたいじゃない仿佛爱情的火焰依旧燃烧大切な話だって3分で終わっちゃうし重要的话三分钟就能说完窓の外でも眺めて華やいでく物思い忍不住眺望窗外却是一片茫然風に乗ってカモメがゆくよ逆风飞翔的海鸥空の色(あお)ってなんてキレイ在晴空下如此美丽まるで果てのない世界 揺れて…揺れて憧れた仿佛这个世界没有尽头 我憧憬着这样的虚无人はこの空へ羽ばたける 翼などもてたとしても人们能够自由飞翔 如果拥有一双翅膀行く先を知る術が無いから苦寻无果未来无迹心もとなく彷徨うでしょう心中惘然彷徨无终あぁ…あぁ ひゅるる日は落ちて啊~啊~风声窸窣红日坠落家へ帰る道がある我想我是该回家了あぁあぁ 人間だもの あぁあぁ 露と墜ちる啊~啊~人们旅途中丢失的东西如同露水坠落時の流れには逆らえず 色褪せてゆく想いもあり难以阻挡的时光会冲淡回忆それでもさめざめと流れてく此时我不禁潸然泪下涙はちょっといいもんじゃない即使偶尔哭一次也没关系吧あぁ…あぁ ひゅるる陽は墜ちて啊~啊~风声窸窣红日坠落まだ愛があるみたいじゃない仿佛爱情的火焰依旧燃烧]]></content>
      <tags>
        <tag>dew</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Windows搭建过程记录]]></title>
    <url>%2F2018%2F10%2F12%2Fhello-world%2F</url>
    <content type="text"><![CDATA[准备 Node.js Git Cmder 安装Hexo1$ npm install -g hexo 本地部署Hexo12345678$ cd d:/hexo$ npm install hexo-cli -g #安装hexo命令行工具$ npm install hexo-deployer-git --save #安装git工具$ hexo init blog$ cd blog$ npm install$ hexo g # 或者hexo generate$ hexo s # 或者hexo server，可以在http://localhost:4000/ 查看 Hexo 常用命令123456789$ hexo new "postName" #新建文章$ hexo new page "pageName" #新建页面$ hexo n == hexo new$ hexo g == hexo generate$ hexo s == hexo server$ hexo d == hexo deploy$ hexo d -g #生成部署$ hexo s -g #生成预览$ hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令 安装NexT主题下载NexT主题到themes文件夹下，去站点_config.yml文件中修改主题名称为next 安装部署工具1$npm install hexo-deployer-git --save 修改_config,yml deploy节点1234deploy: type: git repository: yours repo branch: master NexT美化背景图像及背景与评论半透明设置theme/next/source/css/_custom/custom.styl123456789101112131415161718192021222324252627// Custom styles.body &#123; background: url(/images/blogbg.jpg) no-repeat; background-position: center center; background-attachment: fixed; background-size: cover; background-color: rgba(0, 0, 0, 0.5);&#125;.content &#123; border-radius: 10px; padding: 0px 0px 0px 0px; background:rgba(255, 255, 255, 0.8) none repeat scroll !important; &#125;.post &#123; margin-top: 10px; margin-bottom: 20px; border-radius: 10px; padding: 8px; -webkit-box-shadow: 0 0 10px rgba(100, 100, 100, 0.9); -moz-box-shadow: 0 0 10px rgba(100, 100, 100, 0.9);&#125;#lv-container &#123; border-radius: 10px; padding: 0px 0px 0px 0px; background:rgba(255, 255, 255, 0.8) none repeat scroll !important; &#125; 代码块复制功能 参考资源 官方插件大全 官方提供第三方服务 官方提供主题设置 CSDN WordZzzz 简书 Hexo搭建博客教程 GitHub+Hexo 搭建个人网站详细教程 后续Hexo添加文章时自动打开编辑器 自动备份Hexo博客源文件 在多个仓库部署同一个 hexo 博客 使用 Git Hook 自动部署 Hexo 到个人 VPS]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
